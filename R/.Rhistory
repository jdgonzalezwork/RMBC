clc
setwd("~/Dropbox/ktaucenters-dev-PabloYJuan/R")
### Install and load Packages
packages=c("tclust","RSKC","GSE","otrimle","mclust","mvtnorm",
"ktaucenters","xtable","ellipse","dplyr");
for (i in 1:length(packages)){
if (packages[i] %in% rownames(installed.packages())==FALSE){
install.packages(packages[i])}
require(packages[i], character.only = TRUE)
}
# Load the Workspace.
library(RMBC)
load("phytoplankton_acoustic_data.RData")
n=dim(Y)[1]
Yclean=Y[-outliers_index,]
trueOutliers=Y[outliers_index,]
K=2
############################################
##  1 ROBUST ESTIMACION: RMBC ##########
############################################
resultRMBC=RMBC(Y = Y,K = K)
##  resultRMBC keep the parameters estimation.
##############################################################
# 2 Classic case # ###########################################
#Chris Fraley , # Adrian E. Raftery , Scruca Et al.        ###
##############################################################
mod1= densityMclust(Y,G=K)
############################
######## 3.  OTRIMLE ############
###########################
salot=otrimle(Y,G=K)
################################
######4. TCLUST####################
################################
saltclust=tclust(Y,k=K,alpha=0.15)
######################################################
## 5. TCLUST_20 (ORACLE)
######################################################
saltclustOracle=tclust(Y,k=K,alpha=0.2)
#############################################
## All the estimators have been computed ####
#############################################
#########################################################
## This code generates a pdf file with the figure 2 #####
## and a .tex file whith table 3 of  the manuscript######
#########################################################
### Install and load Packages
packages=c("tclust","RSKC","GSE","otrimle","mclust","mvtnorm",
"ktaucenters","xtable","ellipse","dplyr");
for (i in 1:length(packages)){
if (packages[i] %in% rownames(installed.packages())==FALSE){
install.packages(packages[i])}
require(packages[i], character.only = TRUE)
}
# Load the Workspace.
library(RMBC)
load("phytoplankton_acoustic_data.RData")
n=dim(Y)[1]
Yclean=Y[-outliers_index,]
trueOutliers=Y[outliers_index,]
source('~/Dropbox/3_Clustering/2017/WeightedSestimator/MixtureSimulacionVirtualMachine/codes/CodesToBeUploaded/package/RMBC/R/Fig2.R', echo=TRUE)
setwd("~/Dropbox/3_Clustering/2017/WeightedSestimator/MixtureSimulacionVirtualMachine/codes/CodesToBeUploaded/package/RMBC/R")
### Install and load Packages
packages=c("tclust","RSKC","GSE","otrimle","mclust","mvtnorm",
"ktaucenters","xtable","ellipse","dplyr");
for (i in 1:length(packages)){
if (packages[i] %in% rownames(installed.packages())==FALSE){
install.packages(packages[i])}
require(packages[i], character.only = TRUE)
}
# Load the Workspace.
library(RMBC)
load("phytoplankton_acoustic_data.RData")
n=dim(Y)[1]
Yclean=Y[-outliers_index,]
trueOutliers=Y[outliers_index,]
K=2
packages=c("tclust","RSKC","GSE","otrimle","mclust",
"mvtnorm","dplyr", "ktaucenters","xtable");
for (i in 1:length(packages)){
if(packages[i] %in% rownames(installed.packages())==FALSE){
install.packages(packages[i])
}
library(packages[i],character.only = TRUE)
}
library(RMBC)
################################
# upload matrix ################
################################
Y <- phytoplankton_acoustic_data$Y
outliers_index <- phytoplankton_acoustic_data$outliers_index
Yclean=Y[-outliers_index,]
trueOutliers=Y[outliers_index,]
################################
# plot results ################
################################
plot(Y, main = "Phytoplankton acoustic data", cex.main = 3, lwd = 1,pch = 19, cex = 1,
type = "n", xlab = "x1", ylab = "x2",  xlim = c(0,1.1), ylim = c(0,43)
)
points(trueOutliers,lwd=2,cex=1,pch=4)
points(Yclean,col=1,lwd=1.5,pch=21, bg=4, cex=1)
########################################################
## This code generates a pdf file with the figure 2 #####
## and a .tex file whith table 3 of  the manuscript######
#########################################################
### Install and load Packages
packages=c("tclust","RSKC","GSE","otrimle","mclust","mvtnorm",
"ktaucenters","xtable","ellipse","dplyr");
for (i in 1:length(packages)){
if (packages[i] %in% rownames(installed.packages())==FALSE){
install.packages(packages[i])}
require(packages[i], character.only = TRUE)
}
# Load the Workspace.
library(RMBC)
load("phytoplankton_acoustic_data.RData")
n=dim(Y)[1]
Yclean=Y[-outliers_index,]
trueOutliers=Y[outliers_index,]
K=2
############################################
##  1 ROBUST ESTIMACION: RMBC ##########
############################################
resultRMBC=RMBC(Y = Y,K = K)
##  resultRMBC keep the parameters estimation.
##############################################################
# 2 Classic case # ###########################################
#Chris Fraley , # Adrian E. Raftery , Scruca Et al.        ###
##############################################################
mod1= densityMclust(Y,G=K)
############################
######## 3.  OTRIMLE ############
###########################
salot=otrimle(Y,G=K)
################################
######4. TCLUST####################
################################
saltclust=tclust(Y,k=K,alpha=0.15)
######################################################
## 5. TCLUST_20 (ORACLE)
######################################################
saltclustOracle=tclust(Y,k=K,alpha=0.2)
######################################################
## 5. TCLUST_20 (ORACLE)
######################################################
saltclustOracle=tclust(Y,k=K,alpha=0.2)
#############################################
## All the estimators have been computed ####
#############################################
##############################################################
# Compute clusters for Classic Case
##############################################################
thetaNewClas.alpha=rep(0,K);
thetaNewClas.mu=vector(mode="list", length=K)
thetaNewClas.sigma=vector(mode="list", length=K)
for (j in 1:K){
thetaNewClas.alpha[[j]]=mod1$parameters$pro[j]
thetaNewClas.mu[[j]]=mod1$parameters$mean[,j]
thetaNewClas.sigma[[j]]=mod1$parameters$variance$sigma[,,j]
}
# We estimate Allocation of Points to Clusters. As is stated in Sec. 5.1
# of the manuscript
salqs=quad_disc(Y = Y,theta.alpha =   thetaNewClas.alpha,
theta.mu =thetaNewClas.mu,theta.sigma = thetaNewClas.sigma)
indices2MCLUST=apply(salqs,1,function(x) which(x==max(x))[1])
salqs=quad_disc(Y = Y,theta.alpha =   thetaNewClas.alpha,
theta.mu =thetaNewClas.mu,theta.sigma = thetaNewClas.sigma)
# Load the Workspace.
library(RMBC)
library(RMBC)
outliers_index=phytoplankton_acoustic_data$Y
n=dim(Y)[1]
Yclean=Y[-outliers_index,]
trueOutliers=Y[outliers_index,]
K=2
############################################
##  1 ROBUST ESTIMACION: RMBC ##########
############################################
resultRMBC=RMBC(Y = Y,K = K)
##  resultRMBC keep the parameters estimation.
##############################################################
# 2 Classic case # ###########################################
#Chris Fraley , # Adrian E. Raftery , Scruca Et al.        ###
##############################################################
mod1= densityMclust(Y,G=K)
############################
######## 3.  OTRIMLE ############
###########################
salot=otrimle(Y,G=K)
################################
######4. TCLUST####################
################################
saltclust=tclust(Y,k=K,alpha=0.15)
######################################################
## 5. TCLUST_20 (ORACLE)
######################################################
saltclustOracle=tclust(Y,k=K,alpha=0.2)
thetaNewClas.alpha=rep(0,K);
thetaNewClas.mu=vector(mode="list", length=K)
thetaNewClas.sigma=vector(mode="list", length=K)
Y=phytoplankton_acoustic_data$Y
outliers_index=phytoplankton_acoustic_data$Y
n=dim(Y)[1]
Yclean=Y[-outliers_index,]
trueOutliers=Y[outliers_index,]
K=2
outliers_index
outliers_index
outliers_index
Y=phytoplankton_acoustic_data$Y
outliers_index=phytoplankton_acoustic_data$outliers_index
n=dim(Y)[1]
Yclean=Y[-outliers_index,]
trueOutliers=Y[outliers_index,]
K=2
############################################
##  1 ROBUST ESTIMACION: RMBC ##########
############################################
resultRMBC=RMBC(Y = Y,K = K)
##############################################################
# 2 Classic case # ###########################################
#Chris Fraley , # Adrian E. Raftery , Scruca Et al.        ###
##############################################################
mod1= densityMclust(Y,G=K)
############################
######## 3.  OTRIMLE ############
###########################
salot=otrimle(Y,G=K)
################################
######4. TCLUST####################
################################
saltclust=tclust(Y,k=K,alpha=0.15)
######################################################
## 5. TCLUST_20 (ORACLE)
######################################################
saltclustOracle=tclust(Y,k=K,alpha=0.2)
thetaNewClas.alpha=rep(0,K);
thetaNewClas.mu=vector(mode="list", length=K)
thetaNewClas.sigma=vector(mode="list", length=K)
for (j in 1:K){
thetaNewClas.alpha[[j]]=mod1$parameters$pro[j]
thetaNewClas.mu[[j]]=mod1$parameters$mean[,j]
thetaNewClas.sigma[[j]]=mod1$parameters$variance$sigma[,,j]
}
# We estimate Allocation of Points to Clusters. As is stated in Sec. 5.1
# of the manuscript
salqs=quad_disc(Y = Y,theta.alpha =   thetaNewClas.alpha,
theta.mu =thetaNewClas.mu,theta.sigma = thetaNewClas.sigma)
indices2MCLUST=apply(salqs,1,function(x) which(x==max(x))[1])
salqs=quad_disc(Y = Y,theta.alpha =   thetaNewClas.alpha,
theta.mu =thetaNewClas.mu,theta.sigma = thetaNewClas.sigma)
RMBC
?RMBC
